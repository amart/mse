#if !defined(_opmodel_)
#  define _opmodel_

class model_data : public ad_comm{
  data_int styr;
  data_int endyr;
  data_int base_endyr;
  data_int hcr_styr;
  data_int rcrage;
  data_int trmage;
  data_int nbins1;
  data_int nbins2;
  data_int nbins3;
  data_vector cattot;
  data_vector cattot_log_sd;
  data_int nyrs_fsh;
  data_ivector fshyrs;
  data_vector multN_fsh;
  data_ivector ac_yng_fsh;
  data_ivector ac_old_fsh;
  data_int nyrslen_fsh;
  data_ivector fshlenyrs;
  data_vector multNlen_fsh;
  data_vector rwlk_sd;
  data_matrix catp;
  data_matrix lenp;
  data_matrix wt_fsh;
  data_int nyrs_srv1_bs;
  data_ivector srvyrs1_bs;
  data_vector indxsurv1_bs;
  data_vector indxsurv_log_sd1_bs;
  data_int nyrs_srv1_ek;
  data_ivector srvyrs1_ek;
  data_vector indxsurv1_ek;
  data_vector indxsurv_log_sd1_ek;
  data_int nyrs_srv1_dy;
  data_ivector srvyrs1_dy;
  data_vector indxsurv1_dy;
  data_vector indxsurv_log_sd1_dy;
  data_vector yrfrct_srv1;
  data_int nyrsac_srv1;
  data_ivector srv_acyrs1;
  data_vector multN_srv1;
  data_ivector ac_yng_srv1;
  data_ivector ac_old_srv1;
  data_int nyrslen_srv1;
  data_ivector srv_lenyrs1;
  data_vector multNlen_srv1;
  data_matrix srvp1;
  data_matrix srvlenp1;
  data_matrix wt_srv1;
  data_int nyrs_srv2;
  data_ivector srvyrs2;
  data_vector indxsurv2;
  data_vector indxsurv_log_sd2;
  data_vector yrfrct_srv2;
  data_int nyrsac_srv2;
  data_ivector srv_acyrs2;
  data_vector multN_srv2;
  data_ivector ac_yng_srv2;
  data_ivector ac_old_srv2;
  data_int nyrslen_srv2;
  data_ivector srv_lenyrs2;
  data_vector multNlen_srv2;
  data_matrix srvp2;
  data_matrix srvlenp2;
  data_matrix wt_srv2;
  data_int nyrs_srv3;
  data_ivector srvyrs3;
  data_vector indxsurv3;
  data_vector indxsurv_log_sd3;
  data_vector yrfrct_srv3;
  data_int nyrsac_srv3;
  data_ivector srv_acyrs3;
  data_vector multN_srv3;
  data_int nyrslen_srv3;
  data_ivector srv_lenyrs3;
  data_vector multNlen_srv3;
  data_matrix srvp3;
  data_matrix srvlenp3;
  data_matrix wt_srv3;
  data_matrix age_trans;
  data_matrix len_trans1;
  data_matrix len_trans2;
  data_matrix len_trans3;
  data_matrix wt_pop;
  data_matrix wt_spawn;
  data_vector mat_old;
  data_vector mat;
  data_vector wt_pop_proj;
  data_vector wt_spawn_proj;
  data_vector wt_fsh_proj;
  data_vector wt_srv_proj;
  data_vector Ftarget;
  data_number B40;
  data_number log_mean_recr_proj;
  data_number sigmasq_recr;
  int styr_fsh_sel_dev;
  int iii;
  int jjj;
  double o;
  data_int st_age;
  data_int end_age;
  data_int om_hcr_styr;
  data_int om_rec_avg_styr;
  int nyears;
  int nages;
  data_int nsel_fsh;
  data_vector fsh_frac;
  data_int nsel_srv;
  data_vector srv_frac;
  data_number sp_frac;
  int nsel_tot;
  int nyears_simple;
  int nyears_complex;
  data_int styr_fsh_sel;
  data_matrix frac_catch;
  data_int nyrs_fsh_paa_all;
  data_ivector yrs_fsh_paa_all;
  data_vector multN_fsh_paa_all;
  data_matrix fsh_paa_all;
  data_int nyrs_srv_1_paa_all;
  data_ivector yrs_srv_1_paa_all;
  data_vector multN_srv_1_paa_all;
  data_matrix srv_1_paa_all;
  data_int nyrs_srv_2_paa_all;
  data_ivector yrs_srv_2_paa_all;
  data_vector multN_srv_2_paa_all;
  data_matrix srv_2_paa_all;
  data_vector M;
  int first_rec_year;
  int last_rec_year;
  data_int s_r_relat;
  int h_phase;
  data_int nsel_lengths;
  data_vector sel_lengths;
  data_int phase_fsh_sel;
  data_ivector phase_q;
  data_ivector phase_srv_sel_age1;
  data_ivector phase_srv_sel_a1;
  data_ivector phase_srv_sel_b1;
  data_ivector phase_srv_sel_a2;
  data_ivector phase_srv_sel_b2;
  data_matrix age_trans_all;
  data_matrix age_len_trans;
  dvector maa_old;
  dvector maa;
  data_vector waa_pop;
  data_vector waa_fsh;
  data_matrix waa_srv;
  data_int nyrs_proj;
  data_matrix init_M_proj;
  data_int nsubsample;
  int mcmc_iter;
  data_int complex_flag;
  data_int future_rec_flag;
  data_int debug_flag;
  data_int catch_flag;
  data_int BRP_M_flag;
  data_matrix proj_catch_array;
  double sigma_f;
  double sigma_r;
  double Tier3_alpha;
  double mult_factor;
  double conv_factor;
  double R0_mean;
  double R0_stddev;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  virtual void * mycast(void) {return (void*)this;}
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  ivector integer_control_flags;
  dvector double_control_flags;
  param_init_bounded_number log_R0;
  param_init_bounded_number log_h;
  param_init_bounded_number log_q;
  param_init_bounded_vector log_q_fsh;
  param_init_bounded_number log_q_srv_bs;
  param_init_bounded_number log_q_srv_ek;
  param_init_bounded_number_vector log_q_srv;
  param_init_bounded_number log_initR;
  param_init_bounded_number mean_log_Fmort;
  param_init_bounded_dev_vector log_Fmort_dev;
  param_init_bounded_dev_vector log_rec_dev;
  param_init_bounded_dev_vector log_init_dev;
  param_init_bounded_number log_fsh_sel_cont_a1;
  param_init_bounded_number log_fsh_sel_cont_b1;
  param_init_bounded_number log_fsh_sel_cont_a2;
  param_init_bounded_number log_fsh_sel_cont_b2;
  param_init_bounded_vector log_fsh_sel_a1;
  param_init_bounded_vector log_fsh_sel_b1;
  param_init_bounded_vector log_fsh_sel_a2;
  param_init_bounded_vector log_fsh_sel_b2;
  param_init_bounded_number_vector log_srv_sel_age1;
  param_init_bounded_number_vector log_srv_sel_a1;
  param_init_bounded_number_vector log_srv_sel_b1;
  param_init_bounded_number_vector log_srv_sel_a2;
  param_init_bounded_number_vector log_srv_sel_b2;
  param_init_bounded_dev_vector fsh_sel_cont_a1_dev;
  param_init_bounded_dev_vector fsh_sel_cont_b1_dev;
  param_init_bounded_dev_vector fsh_sel_cont_a2_dev;
  param_init_bounded_dev_vector fsh_sel_cont_b2_dev;
  param_matrix N;
  param_matrix C;
  param_matrix F;
  param_matrix Slen;
  param_matrix Sage;
  param_matrix Sage_fsh;
  param_matrix Z;
  param_matrix expZ;
  param_matrix expZsp;
  param_3array expZfrac;
  param_vector initN;
  param_vector Fmort;
  param_vector spawn_biomass;
  param_vector total_biomass;
  param_vector age_3_plus_biomass;
  param_vector estsrvbio_bs;
  param_vector estsrvbio_ek;
  param_matrix estsrvbio;
  param_number fsh_sel_cont_a1;
  param_number fsh_sel_cont_b1;
  param_number fsh_sel_cont_a2;
  param_number fsh_sel_cont_b2;
  param_vector fsh_sel_a1;
  param_vector fsh_sel_b1;
  param_vector fsh_sel_a2;
  param_vector fsh_sel_b2;
  param_vector srv_sel_age1;
  param_vector srv_sel_a1;
  param_vector srv_sel_b1;
  param_vector srv_sel_a2;
  param_vector srv_sel_b2;
  param_number R0;
  param_number h;
  param_number steepness;
  param_number q;
  param_vector q_fsh;
  param_number q_srv_bs;
  param_number q_srv_ek;
  param_vector q_srv;
  param_number initR;
  param_vector pred_catch;
  param_matrix pred_fsh_paa_all;
  param_matrix pred_fsh_paa;
  param_3array pred_srv_paa_all;
  param_3array pred_srv_paa;
  param_matrix pred_fsh_pal;
  param_matrix pred_srv_1_pal;
  param_matrix pred_srv_2_pal;
  param_matrix pred_srv_3_pal;
  param_matrix N_proj;
  param_matrix C_proj;
  param_vector F_proj;
  param_matrix M_proj;
  param_matrix Z_proj;
  param_matrix expZ_proj;
  param_matrix expZsp_proj;
  param_3array expZfrac_proj;
  param_matrix fsh_paa_all_proj;
  param_3array srv_paa_all_proj;
  param_vector catch_proj;
  param_vector spawn_biomass_proj;
  param_vector total_biomass_proj;
  param_vector age_3_plus_biomass_proj;
  param_matrix estsrvbio_proj;
  param_3array estsrvN_proj;
  param_vector estsrvbio_proj_2_sd;
  param_vector estsrvbio_proj_2_multN;
  param_vector estFOFL_proj;
  param_vector estFABC_proj;
  param_vector estABC_proj;
  param_matrix estABCaa_proj;
  param_number mcmc_avg_rec;
  param_number mcmc_avg_log_rec;
  param_number mcmc_std_dev_avg_log_rec;
  param_number mcmc_CV_avg_log_rec;
  param_number mcmc_avg_rec_years;
  param_number mcmc_max_rec;
  random_number_generator *   pad_mcmc_rng;
  param_vector F100;
  param_vector SB100;
  param_vector SBtarget;
  param_vector F40;
  param_vector SB40;
  param_vector F35;
  param_vector SB35;
  param_vector F20;
  param_vector SB20;
  param_vector Sage_fsh_avg;
  param_vector M_at_age;
  param_number F_ABC;
  param_number ABC;
  param_number F_OFL;
  param_number OFL;
  param_number phi0;
  param_number avgR;
  param_number avgR_CV;
  param_number SB0;
  param_number SBcurr;
  param_vector B0_mw;
  param_vector f;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value obj_fun;
  param_stddev_vector sd_recruits_1;
  param_stddev_number sd_avg_rec_1;
  param_stddev_number sd_avg_rec_1_alt;
  param_stddev_vector sd_recruits_2;
  param_stddev_number sd_avg_rec_2;
  param_stddev_number sd_avg_rec_2_alt;
  param_stddev_vector sd_total_biomass;
  param_stddev_vector sd_spawn_biomass;
  param_stddev_vector sd_age_3_plus_biomass;
  param_likeprof_number var_prof;
public:
  virtual void userfunction(void);
  virtual void report(const dvector& gradients);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void);
  void calculate_selectivity(void);
  void calculate_mortality(void);
  void calculate_n_a_a(void);
  void calculate_c_a_a(void);
  void calculate_length_comps(void);
 void calculate_bio_ref_points(dvar_vector sel, int curr_yr, dvar_vector Mvec);
  void evaluate_objective_function(void);
  void calculate_projections(void);
 int get_iter_seed(int iter);
 void compose_input_data_file(int curryr);
 dvariable calculate_F_proj(int curryr,dvar_vector Mvec);
 void calculate_pop_params(int curryr);
 void calculate_F_ABC(int curryr,dvar_vector Mvec);
 dvariable solve_for_fishing_mortality(dvariable catch_level, int naa_yr);
 dvariable get_spr_rates(dvariable spr_percent, dvar_vector sel, int curryr, dvar_vector Mvec);
 dvariable spr_unfished(int curryr, dvar_vector Mvec);
 dvariable spr_ratio(dvariable trial_F, dvar_vector sel, int curryr, dvar_vector Mvec);
 dvector get_multinomial_sample(dvector obs_p, int st_idx, int end_idx, int nsamples);
 int get_uniform_sample_int(int st_idx, int end_idx);
 void write_curryr_params_to_file(int niter, int curryr);
  void write_idf_to_estimator_file(void);
 void run_estimator_model(int niter, int curryr);
 dvariable parse_estimator_results(int niter, int curryr);

};
#endif
